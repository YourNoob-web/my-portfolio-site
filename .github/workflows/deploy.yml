name: Deploy to EC2 and S3

on:
  push:
    branches:
      - main

permissions:
  id-token: write     # required for OIDC
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS creds via OIDC (uses the role Terraform created)
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      # Install AWS CLI (needed for aws s3 / ssm commands)
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl
          curl "https://awscli.amazonaws.com/AWSCLIV2.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # (Optional) build/copy your site into ./build — keep if you need it
      - name: Prepare build folder
        run: |
          mkdir -p build
          cp index.html build/ || echo "index.html not found"
          cp style.css build/ || echo "style.css not found"

      # Sync to S3 using the OIDC role (no access keys)
      - name: Sync static site to S3
        run: |
          if [ -d "./build" ]; then
            aws s3 sync ./build/ s3://tarun-portfolio-final-site/ --delete --region us-east-1
          else
            echo "⚠️ No ./build folder found. Skipping S3 sync."
          fi

      # Restart the EC2 app via SSM instead of SSH
      # Requires: enable_ssm_for_ec2=true in Terraform and SSM agent running on the instance
      - name: Restart EC2 app via SSM
        run: |
          INSTANCE_ID=i-09358575c89badfe1
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters commands='docker rm -f portfolio-container || true; cd /opt/app && git pull && docker build -t portfolio-site . && docker run -d --restart=always --name portfolio-container -p 80:80 portfolio-site' \
            --query "Command.CommandId" --output text
